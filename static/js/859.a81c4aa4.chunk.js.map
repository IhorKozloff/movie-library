{"version":3,"file":"static/js/859.a81c4aa4.chunk.js","mappings":"gOAuBaA,EAAmB,WAE5B,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAgDL,EAAAA,EAAAA,UAA2B,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvEE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAG5CG,GAA0DC,EAAAA,EAAAA,IAA2BP,GAA9EQ,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAsBC,GAAFJ,EAATK,UAAkBL,EAAPI,SAASE,EAAUN,EAAVM,YAE5CC,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACPN,GAIwB,KAAtB,OAAJA,QAAI,IAAJA,GAAa,QAATM,EAAJN,EAAMO,eAAO,IAAAD,OAAT,EAAJA,EAAeE,SA9BG,SAACC,EAA+BC,EAA2BC,GAEpF,GAA2B,IAAvBF,EAAYD,OACZG,EAAOD,OAEN,CAED,IAAME,EAAWH,EAAYI,KAAI,SAAAC,GAAI,OAAIA,EAAKC,EAAE,IAE7BL,EAAQM,MAAK,SAAAF,GAAI,OAAIF,EAASK,SAASH,EAAKC,GAAG,KAG9DJ,EAAO,GAADO,QAAAC,EAAAA,EAAAA,GAAKV,IAAWU,EAAAA,EAAAA,GAAKT,IAEnC,CACJ,CAgBYU,CAAqBxB,EAAkBI,EAAKO,QAASV,EAG7D,GAAG,CAACG,EAAMJ,IAQV,MAAO,CACHA,iBAAAA,EACAyB,eANmB,WACnB5B,EAAeD,EAAc,EACjC,EAKI8B,iBAToBlB,IAAeH,IAAcC,KASX,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,gBAAoB,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,MAEtE,E,UC/Ce,SAASC,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,UAAU,IACrEI,EAA2D/C,IAApDS,EAAgBsC,EAAhBtC,iBAAkByB,EAAca,EAAdb,eAAgBC,EAAcY,EAAdZ,eAUzC,OARAjB,EAAAA,EAAAA,YAAU,WACa,SAAfyB,GAGAF,GAASO,EAAAA,EAAAA,IAAc,QAE/B,GAAG,CAACP,EAAUE,KAGVM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACK1C,IAAoB2C,EAAAA,EAAAA,KAACC,EAAAA,GAAkB,CAACxC,KAAMJ,EAAkBoC,MAAO,CAACS,KAAMf,KAC9EJ,IACGiB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAAoBJ,UAC/BC,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CAACC,eAAgBvB,EAAeiB,SAAC,oBAMpE,C","sources":["Hooks/useTopMoviesData.ts","Pages/Home.tsx"],"sourcesContent":["import {useState, useEffect } from 'react';\r\nimport { useGetTopMoviesOnWeekQuery } from 'store';\r\nimport { CustomTopMovie } from 'Interfaces';\r\n\r\n//type movieListDataCreatorFn = (currentData: CustomTopMovie[], newData: CustomTopMovie[], setter: (newState:CustomTopMovie[]) => void) => void;\r\n\r\nconst movieListDataCreator = (currentData: CustomTopMovie[], newData: CustomTopMovie[], setter: (newState:CustomTopMovie[]) => void) => {\r\n    \r\n    if (currentData.length === 0) {\r\n        setter(newData);\r\n    } \r\n    else {\r\n\r\n        const stateIds = currentData.map(item => item.id);\r\n\r\n        const matchСheck = newData.find(item => stateIds.includes(item.id));\r\n\r\n        if (!matchСheck) {\r\n            setter([...currentData, ...newData]);\r\n        };\r\n    }; \r\n};\r\n\r\nexport const useTopMoviesData = () => {\r\n    \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [topMovieListData, setTopMovieListData] = useState<CustomTopMovie[]>([]);\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const {data, isLoading, isSuccess, isError, isFetching} = useGetTopMoviesOnWeekQuery(currentPage);\r\n\r\n    useEffect(() => {\r\n        if (!data) {\r\n            return;\r\n        }\r\n \r\n        if(data?.results?.length !== 0) {\r\n            movieListDataCreator(topMovieListData, data.results, setTopMovieListData);\r\n            //handleMoreBtnStatus(currentPage, data.total_pages, setMoreBtnStatus);\r\n        }\r\n    }, [data, topMovieListData]);\r\n\r\n    const moreBtnVisible = !isFetching || !isLoading || !isError;\r\n\r\n    const loadMoreAction = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    return {\r\n        topMovieListData, \r\n        loadMoreAction, \r\n        moreBtnVisible: moreBtnVisible && data?.total_pages !== data?.page\r\n    };\r\n};","import { useLocation } from 'react-router-dom';\nimport { MovieListComponent, MoreButton } from 'components';\nimport { useTopMoviesData } from 'Hooks/useTopMoviesData';\nimport { setPageStatus, useAppDispatch, useAppSelector } from 'store';\nimport { useEffect } from 'react';\n\nexport default function Home () {\n    \n    const location = useLocation();\n    const dispatch = useAppDispatch(); \n    const pageStatus = useAppSelector(state => state.userTheme.pageStatus);\n    const {topMovieListData, loadMoreAction, moreBtnVisible} = useTopMoviesData();\n\n    useEffect(() => {\n        if (pageStatus === 'home') {\n            return;\n        } else {\n            dispatch(setPageStatus('home'));\n        }\n    }, [dispatch, pageStatus]);\n\n    return (\n        <>\n            {topMovieListData && <MovieListComponent data={topMovieListData} state={{from: location}}/>}\n            {moreBtnVisible && \n                <>\n                    <div className=\"flex-center-center\">\n                        <MoreButton onMoreBtnCLick={loadMoreAction}>Load More</MoreButton>\n                    </div>\n                </>\n            }\n        </>\n    );   \n};"],"names":["useTopMoviesData","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","topMovieListData","setTopMovieListData","_useGetTopMoviesOnWee","useGetTopMoviesOnWeekQuery","data","isLoading","isError","isSuccess","isFetching","useEffect","_data$results","results","length","currentData","newData","setter","stateIds","map","item","id","find","includes","concat","_toConsumableArray","movieListDataCreator","loadMoreAction","moreBtnVisible","total_pages","page","Home","location","useLocation","dispatch","useAppDispatch","pageStatus","useAppSelector","state","userTheme","_useTopMoviesData","setPageStatus","_jsxs","_Fragment","children","_jsx","MovieListComponent","from","className","MoreButton","onMoreBtnCLick"],"sourceRoot":""}